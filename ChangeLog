known issues:
may deadlock with some avisynth plugins (set the number of threads to a bigger number, VSCore(threads=4))
compatrgb32 may be flipped when output (use FlipVertical as a workaround)
.vpy files need to be opened with file\open and then select avifile compat from the format list before selecting the .vpy script (this is a vdub limitation)

r14:
added vivtc (aka tivtc lite) to the included filters
the fpu state check now only outputs a warning instead of terminating
users can now set the cache size limit over which vs aggressively starts to decrease cache size, use core.set_max_cache_size(number of MB) (the memory use is calculated from the combined size of all framebuffers allocated)
fixed memory leaks in PlaneDifference and PlaneAverage


r13:
enabled another part of the cache size adjustment, cache sizes will now be aggressively reduced to keep framebuffer memory use below 1GB
filters can now get passed zero length arrays, the rewritten parts also improves argument handling in python (integer types now get converted to float implicitly when passed as a function argument)
added right click\new\vapoursynth script shortcut to the installer
make the number of frames in progress equal the number of threads, this should always be the upper beneficial value for any script, previously it was fixed at 10
fixed a rowsize bug in avisynth compatibility and implemented the subframe functions
added PEMVerify, a function to check for out of bounds values in filter output for developers
added PlaneDifference and PlaneAverage functions for use in conditional filtering
added copy(), and get_write_ptr() to clips in python, renamed get_data() to get_read_ptr()
greatly improved the handling of SelectClip and ModifyFrame (formerly ModifyProps), conditional filtering is now something that's usable
using ModifyFrame and a bit of cleverness it is now possible to implement fairly complex filters in python

r12:
fixed a scheduling error for fmParallelRequests filters (all avisynth filters and several internal ones)
added a bit more documentation, this time a bit about python and the classes found there
added vsfs, a port of avfs
v210 output support, add enable_v210=True to use it
removed support for clips with unknown length from vfw
can now open files with unicode filenames in vfw
fixed some minor bugs and compiler warnings

r11:
switched the precompiled module to python 3.3
vfw now also has several frame requests going at once, this should make the throughput get close to clip.output()
vfw now returns some colorful bars on error because refusing to open crashes too many applications
vfw now has support for the P010, P016, P210, P216 formats, tested in mpc-hc with madvr
removed some stray debug prints

r10:
fixed an issue where python could deadlock on the GIL
now comes in an installer
added a skeleton filter and a heavily commented invert example filter to the sdk dir
added a vfw module
fixed slicing/indexing in python module
list_functions() can now be used on a namespace (core.resize.list_functions())
improved and documented build system, see INSTALL
other small relating to the python bindings

r9:
to get around keyword conflicts all function arguments names can be specified with both name and _name (Loop(_clip=a) is the same as Loop(clip=a))
works under linux and probably osx too
full source released under LGPL
it is now possible to use + to splice clips and the slicing operator to perform Trim, Reverse and SelectEvery operations on a clip
documentation of all user functions
lots of included filter fixes
minor fixes to other things

r8:
portability fixes for linux
minor api additions to make filters that consume 20+ input frames/scan a whole clip feasible
added cpu state checks after filter calls
added a function type, plugins may now take a python function and evaluate it for every frame
implemented the final planned standard functions (transpose, croprel, clipselect, modifyprops)
fixed the huge memory leak in cropabs
other small fixes

r7:
includes the source for all of the std functions and the header needed to write plugins (more source coming soon)
unnamed arguments are now accepted
y4m headers now specify the colorspace for all yuv formats and gives an error when used with non-yuv
added a new B tag to y4m output that specifies the number of bits per sample (B8/B10/B16)
more minor fixes

r6:
now drops all crop calls to env->invoke(), fixes dgdecode compatibility but you have to crop yourself now
all 64bit issues fixed
added several checks to prevent the compat formats from being used by new filters
minor fixes and extra checks for everything

r5:
more python output fixes
added accept_lowercase as a setting for the core constructor
python module refinement, now all objects have a string representation with more information
other minor fixes

r4:
fixed the bad frame output from the python module
added a callback to the output function so progress can be reported
ported ffms2
raw frame data can be accessed from python

r3:
fixes even more threading and performance issues
adds special support for yuy2 and rgb32 so most avisynth filters should work
added hacks to make mvtools2 work

r2:
fixes a large number of threading issues
removed the stupid clip.vi.width thing in python, now it's simply clip.width
fixed the frame reordering in the python bindings, now frames pop out in the expected order

r1:
buggy first version




